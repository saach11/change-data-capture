# docker-compose.yml
version: "3"
volumes:
  broker1:
  broker2:
  broker3:
services:
  mssql-primary:
    image: cdc/sql-server
    build:
      context: sqlserver-init
    container_name: mssql-primary
    hostname: mssql-primary
    ports:
     - 1433:1433
    environment:
      ACCEPT_EULA: Y
      MSSQL_PID: Enterprise
      SA_PASSWORD: P@ssw0rd123
      MSSQL_AGENT_ENABLED: true
      MSSQL_ENABLE_HADR: 1
  mssql-secondary:
    image: cdc/sql-server
    build:
      context: sqlserver-init
    container_name: mssql-secondary
    hostname: mssql-secondary
    ports:
     - 1434:1433
    environment:
      ACCEPT_EULA: Y
      MSSQL_PID: Enterprise
      SA_PASSWORD: P@ssw0rd123
      MSSQL_AGENT_ENABLED: true
      MSSQL_ENABLE_HADR: 1
  broker1:
    image: 'bitnami/kafka:latest'
    container_name: broker1
    ports:
      - "9091:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093,3@broker3:9093'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: 9Fe32R9TTRCr2cVolz95pw
    volumes:
      - broker1:/bitnami/kafka
  broker2:
    image: 'bitnami/kafka:latest'
    container_name: broker2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093,3@broker3:9093'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: 9Fe32R9TTRCr2cVolz95pw
    volumes:
      - broker2:/bitnami/kafka
  broker3:
    image: 'bitnami/kafka:latest'
    container_name: broker3
    ports:
      - "9094:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092
      KAFKA_CFG_BROKER_ID: 3
      KAFKA_CFG_NODE_ID: 3
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093,3@broker3:9093'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: 9Fe32R9TTRCr2cVolz95pw
    volumes:
      - broker3:/bitnami/kafka
  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "80:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: 'broker1:9091,broker2:9092,broker3:9094'
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
  kafka-connect-source:
    image: debezium/connect:latest
    container_name: kafka-connect-source
    ports:
      - 8083:8083
    environment:
      CONFIG_STORAGE_TOPIC: source_connect_configs
      OFFSET_STORAGE_TOPIC: source_connect_offsets
      STATUS_STORAGE_TOPIC: source_connect_statuses
      BOOTSTRAP_SERVERS: broker1:9091,broker2:9092,broker3:9094
      GROUP_ID: 1
    links:
      - mssql-primary
      - mssql-secondary
      - broker1
      - broker2
      - broker3
    depends_on:
      - mssql-primary
      - mssql-secondary
      - broker1
      - broker2
      - broker3
  kafka-connect-sink:
    image: confluent/kafka-sink-s3
    build:
      context: kafka-connect-sink
    container_name: kafka-connect-sink
    ports:
      - 8084:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker1:9091,broker2:9092,broker3:9094
      CONNECT_GROUP_ID: "sink"
      CONNECT_CONFIG_STORAGE_TOPIC: "sink_connect_config"
      CONNECT_OFFSET_STORAGE_TOPIC: "sink_connect_coffsets"
      CONNECT_STATUS_STORAGE_TOPIC: "sink_connect_status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
    links:
      - broker1
      - broker2
      - broker3
    depends_on:
      - broker1
      - broker2
      - broker3